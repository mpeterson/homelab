---
- name: Create new container CT-{{ ct.key }}
  vars:
    netcfg: "{% for net in ct.value.network_devices | default({}, true) | dict2items %}
      --{{ net.key }} name={{ net.value.name }},\
      bridge={{ net.value.bridge }},\
      firewall={{ net.value.firewall | default(pve_container_defaults.netdev_firewall) | ternary(1, 0, true) }},\
      ip={{ net.value.ip }},\
      gw={{ net.value.gateway }}\
      {{ ',tag=' + net.value.vlan_tag | string if net.value.vlan_tag is defined else '' }}
      {% endfor %}"
    container_tags: "{{ '--tags ' + (ct.value.tags | default([]) + [managed_by_ansible_tag]) | join(',', true) }}"
    nameserver: "{{ '--nameserver ' + ct.value.nameserver if ct.value.nameserver is defined else '' }}"
    searchdomain: "{{ '--searchdomain ' + ct.value.searchdomain if ct.value.searchdomain is defined else '' }}"
  ansible.builtin.command: >-
    pvesh create /nodes/{{ ansible_facts.hostname }}/lxc
    --vmid {{ ct.key }}
    --ostemplate {{ ct.value.template.storage }}:vztmpl/{{ ct.value.template.name }}
    --hostname {{ ct.value.hostname }}
    --password {{ ct.value.password }}
    --ssh-public-keys "{{ ct.value.ssh_keys }}"
    --cores {{ ct.value.cores | default(pve_container_defaults.cores, true) }}
    --memory {{ ct.value.memory | default(pve_container_defaults.memory, true) }}
    --swap {{ ct.value.swap | default(pve_container_defaults.swap, true) }}
    --rootfs {{ ct.value.rootfs.storage }}:{{ ct.value.rootfs.size }}
    --features nesting={{ ct.value.nesting | default(pve_container_defaults.nesting) | ternary(1, 0, true) }}
    --onboot {{ ct.value.onboot | default(pve_container_defaults.onboot) | ternary(1, 0, true) }}
    --unprivileged {{ ct.value.unprivileged | default(pve_container_defaults.unprivileged) | ternary(1, 0, true) }}
    --timezone {{ ct.value.timezone | default(pve_container_defaults.timezone, true) }}
    --start {{ ct.value.start | default(pve_container_defaults.start) | ternary(1, 0, true) }}
    {{ nameserver }}
    {{ searchdomain }}
    {{ container_tags }}
    {{ netcfg }}
  changed_when: true
