---
- name: Get ACME TOS URL
  ansible.builtin.command: pvesh get /cluster/acme/tos
  register: tos_url
  changed_when: false

- name: Get ACME accounts
  ansible.builtin.command: pvesh get /cluster/acme/account --output-format json
  register: acme_accounts
  changed_when: false

- name: Set account name
  ansible.builtin.set_fact:
    acme_account_name: "{{ 'staging' if proxmox_acme.staging else 'production' }}"

- name: Add ACME account
  vars:
    acme_url: "https://acme{{ '-staging' if proxmox_acme.staging else '' }}-v02.api.letsencrypt.org/directory"
  ansible.builtin.command: >
    pvesh create /cluster/acme/account
    --contact {{ proxmox_acme.account_mail }}
    --directory {{ acme_url }}
    --name {{ acme_account_name }}
    --tos_url {{ tos_url.stdout }}
  when: "acme_account_name not in acme_accounts.stdout | from_json | json_query('[].name')"
  changed_when: true

- name: Enable ACME plugin {{ proxmox_acme.plugin }}
  ansible.builtin.include_tasks: enable_plugin_{{ proxmox_acme.plugin }}.yaml

- name: Get node configuration
  ansible.builtin.command: pvesh get /nodes/{{ ansible_facts.hostname }}/config --output-format json
  register: node_config
  changed_when: false

- name: Set ACME configuration on node
  vars:
    node_cfg: "{{ node_config.stdout | from_json }}"
    acme_account_config: account={{ acme_account_name }}
    acme_domain_config: "{{ ansible_facts.fqdn }},plugin={{ proxmox_acme.plugin }}-{{ ansible_facts.hostname }}"
  ansible.builtin.command: >
    pvesh set /nodes/{{ ansible_facts.hostname }}/config
    --acme {{ acme_account_config }}
    --acmedomain0 {{ acme_domain_config }}
  when: >
    acme_account_config not in node_cfg['acme'] | default('', true) or
    acme_domain_config not in node_cfg['acmedomain0'] | default('')
  changed_when: true

- name: Get certificate info
  ansible.builtin.command: pvesh get /nodes/{{ ansible_facts.hostname }}/certificates/info --output-format json
  register: certificate_info
  changed_when: false

- name: Order new certificate
  ansible.builtin.command: pvesh create /nodes/{{ ansible_facts.hostname }}/certificates/acme/certificate
  when: "'pveproxy-ssl.pem' not in certificate_info.stdout | from_json | json_query('[].filename')"
  changed_when: true

- name: Wait for certificate file
  ansible.builtin.wait_for:
    path: /etc/pve/local/pveproxy-ssl.pem
