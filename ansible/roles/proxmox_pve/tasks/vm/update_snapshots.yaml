---
- name: Validate snapshot names VM-{{ vm.key }}
  ansible.builtin.fail:
    msg: "Snapshot name 'current' is reserved, and can not be used."
  when: vm.value.snapshots is defined and 'current' in vm.value.snapshots.keys()

- name: Get existing snapshots VM-{{ vm.key }}
  ansible.builtin.command: >-
    pvesh get /nodes/{{ ansible_facts.hostname }}/qemu/{{ vm.key }}/snapshot --output-format json
  changed_when: false
  register: existing_snapshots

- name: Update snapshots VM-{{ vm.key }}
  vars:
    existing_snapshot_names: >-
      {{ existing_snapshots.stdout | from_json | json_query('[].name') | difference(['current']) }}
  block:
    - name: Create snapshot if not present VM-{{ vm.key }}
      ansible.builtin.command: >-
        pvesh create /nodes/{{ ansible_facts.hostname }}/qemu/{{ vm.key }}/snapshot
        --snapname {{ snapshot_name }}
      when: vm.value.snapshots is defined
      changed_when: true
      with_items: "{{ vm.value.snapshots.keys() | difference(existing_snapshot_names) }}"
      loop_control:
        loop_var: snapshot_name

    - name: Delete snapshot if not in config VM-{{ vm.key }}
      ansible.builtin.command: >-
        pvesh delete /nodes/{{ ansible_facts.hostname }}/qemu/{{ vm.key }}/snapshot/{{ snapshot_name }}
      when: existing_snapshot_names != []
      changed_when: true
      with_items: "{{ existing_snapshot_names | difference(vm.value.snapshots.keys() \
        if vm.value.snapshots is defined else []) }}"
      loop_control:
        loop_var: snapshot_name
