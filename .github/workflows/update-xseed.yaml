name: Sync xseed.sh from Gist

on:
  schedule:
    - cron: "0 5 * * *"  # Daily at 05:00 UTC
  workflow_dispatch:

jobs:
  sync-xseed:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Clone the Gist
        run: |
          git clone https://gist.github.com/ddc337a37b038cb84e6248fe8adebb46.git xseed-gist
          cp xseed-gist/xseed.sh kubernetes/apps/custom-arrscripts/scripts/xseed.sh.new

      - name: Check if file changed
        id: check_changes
        run: |
          if ! cmp -s kubernetes/apps/custom-arrscripts/scripts/xseed.sh.new kubernetes/apps/custom-arrscripts/scripts/xseed.sh; then
            echo "changed=true" >> $GITHUB_OUTPUT
            mv kubernetes/apps/custom-arrscripts/scripts/xseed.sh.new kubernetes/apps/custom-arrscripts/scripts/xseed.sh
          else
            echo "No changes to xseed.sh"
            echo "changed=false" >> $GITHUB_OUTPUT
            rm kubernetes/apps/custom-arrscripts/scripts/xseed.sh.new
          fi

      - name: Commit and push (reuse PR if exists)
        if: steps.check_changes.outputs.changed == 'true'
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@users.noreply.github.com"

          BRANCH=gh-action/update-xseed
          BASE_BRANCH=$(git rev-parse --abbrev-ref HEAD)

          # Check if branch exists remotely
          if git ls-remote --heads origin $BRANCH | grep -q $BRANCH; then
            # If it exists, fetch it first
            git fetch origin $BRANCH
            git checkout $BRANCH || git checkout -b $BRANCH
            git reset --hard origin/$BRANCH
          else
            # If it doesn't exist, create it
            git checkout -b $BRANCH
          fi

          # Add changes and commit
          git add kubernetes/apps/custom-arrscripts/scripts/xseed.sh
          git commit -m "Update xseed.sh from Gist"
          
          # Push changes
          git push -u origin $BRANCH

          # Check if PR already exists
          PR_EXISTS=$(gh pr list --head "$BRANCH" --base "$BASE_BRANCH" --state open --json number | grep -c '"number":' || true)
          
          if [ "$PR_EXISTS" -gt 0 ]; then
            echo "PR already exists, updated branch."
          else
            gh pr create \
              --title "Update xseed.sh from Gist" \
              --body "This PR updates xseed.sh with the latest content from the Gist." \
              --head "$BRANCH" \
              --base "$BASE_BRANCH"
          fi