---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: prometheus-operator-configs
  namespace: argocd
  finalizers:
    - resources-finalizer.argocd.argoproj.io
  annotations:
    argocd.argoproj.io/sync-wave: "-1"

spec:
  project: default

  destination:
    server: https://kubernetes.default.svc
    namespace: monitoring
  syncPolicy:
    syncOptions:
      - CreateNamespace=true
    managedNamespaceMetadata:
      labels:
        pod-security.kubernetes.io/enforce: privileged
    automated:
      selfHeal: true
      prune: true

  source:
    repoURL: https://github.com/mpeterson/homelab
    path: kubernetes/infra/prometheus-operator/
    targetRevision: main

---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: prometheus-operator-crds
  namespace: argocd
  finalizers:
    - resources-finalizer.argocd.argoproj.io
  annotations:
    argocd.argoproj.io/sync-wave: "-7"
spec:
  project: default
  
  destination:
    server: https://kubernetes.default.svc
    namespace: monitoring
  syncPolicy:
    syncOptions:
      - CreateNamespace=true
      - Replace=true
    managedNamespaceMetadata:
      labels:
        pod-security.kubernetes.io/enforce: privileged
    automated:
      selfHeal: true
      prune: true
  
  source:
    repoURL: https://prometheus-community.github.io/helm-charts
    chart: prometheus-operator-crds
    targetRevision: 22.0.2
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: kube-prometheus-stack
  namespace: argocd
  finalizers:
    - resources-finalizer.argocd.argoproj.io
  annotations:
    argocd.argoproj.io/sync-wave: "-6"
spec:
  project: default
  
  destination:
    server: https://kubernetes.default.svc
    namespace: monitoring
  syncPolicy:
    syncOptions:
      - CreateNamespace=true
    managedNamespaceMetadata:
      labels:
        pod-security.kubernetes.io/enforce: privileged
    automated:
      selfHeal: true
      prune: true
  
  source:
    repoURL: https://prometheus-community.github.io/helm-charts
    chart: kube-prometheus-stack
    targetRevision: 75.17.1
    helm:
      valuesObject:
        crds:
          enabled: false
        cleanPrometheusOperatorObjectNames: true

        ###
        ### Component values
        ###
        alertmanager:
          enabled: false

        kubeApiServer:
          enabled: true
          serviceMonitor:
            metricRelabelings:
              # Drop high cardinality labels
              - action: drop
                sourceLabels: ["__name__"]
                regex: (apiserver|etcd|rest_client)_request(|_sli|_slo)_duration_seconds_bucket
              - action: drop
                sourceLabels: ["__name__"]
                regex: (apiserver_response_sizes_bucket|apiserver_watch_events_sizes_bucket)

        kubeControllerManager:
          enabled: false

        kubeEtcd:
          enabled: false

        kubelet:
          enabled: true
          serviceMonitor:
            metricRelabelings:
              # Drop high cardinality labels
              - action: labeldrop
                regex: (uid)
              - action: labeldrop
                regex: (id|name)
              - action: drop
                sourceLabels: ["__name__"]
                regex: (rest_client_request_duration_seconds_bucket|rest_client_request_duration_seconds_sum|rest_client_request_duration_seconds_count)

        kubeProxy:
          enabled: false

        kubeScheduler:
          enabled: false

        kubeStateMetrics:
          enabled: false

        nodeExporter:
          enabled: false

        grafana:
          enabled: false
          forceDeployDashboards: true
          sidecar:
            dashboards:
              annotations:
                grafana_folder: Kubernetes

        ###
        ### Prometheus operator values
        ###
        prometheusOperator:
          resources:
            requests:
              cpu: 35m
              memory: 273M
            limits:
              memory: 326M

          prometheusConfigReloader:
            # resource config for prometheusConfigReloader
            resources:
              requests:
                cpu: 5m
                memory: 32M
              limits:
                memory: 32M

        ###
        ### Prometheus instance values
        ###
        prometheus:
          prometheusSpec:
            alertingEndpoints:
              - namespace: monitoring
                name: alertmanager
                port: 9093
                apiVersion: v2
            enableAdminAPI: true
            enableFeatures:
              - auto-gomaxprocs
              - memory-snapshot-on-shutdown
              - new-service-discovery-manager
            externalUrl: "https://prometheus.lan.peterson.com.ar"
            podMonitorSelectorNilUsesHelmValues: false
            probeSelectorNilUsesHelmValues: false
            replicas: 1
            replicaExternalLabelName: "__replica__" # must match with thanos value `.query.replicaLabel[0]`
            resources:
              requests:
                cpu: 100m
              limits:
                memory: 2000M
            retention: 14d
            retentionSize: 50GB
            ruleSelectorNilUsesHelmValues: false
            scrapeConfigSelectorNilUsesHelmValues: false
            scrapeInterval: 1m # Must match interval in Grafana Helm chart
            serviceMonitorSelectorNilUsesHelmValues: false
            storageSpec:
              volumeClaimTemplate:
                spec:
                  storageClassName: zfs-generic-iscsi-csi-xfs
                  resources:
                    requests:
                      storage: 55Gi
            walCompression: true

          route:
            main:
              enabled: true
              hostnames:
                - prometheus.lan.peterson.com.ar
              parentRefs:
                - name: internal-gateway
                  namespace: network
                  sectionName: https
          